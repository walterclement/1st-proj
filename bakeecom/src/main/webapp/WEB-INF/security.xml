<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- SPRING SECURITY CONFIGURATION -->
	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">

		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/**" access="permitAll" />

		<!-- access denied page -->
		<access-denied-handler error-page="/403" />

		<form-login login-page="/login" username-parameter="username"
			password-parameter="password" login-processing-url="/j_spring_security_check"
			default-target-url="/home1" authentication-failure-url="/login?error=failed" />
		<logout logout-success-url="/login?logout" />
		<!-- enable csrf protection -->
		<csrf disabled="true" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select name,password,enable from USER where name=?"
				authorities-by-username-query="select u1.name, u2.role_name from USER u1, userrole u2 where u1.name = u2.name and u1.name =?" />
		</authentication-provider>
	</authentication-manager>
</beans:beans>